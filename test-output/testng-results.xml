<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="9" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-10-07T12:54:28 EET" name="regerrisontest" finished-at="2020-10-07T12:54:44 EET" duration-ms="16136">
    <groups>
    </groups>
    <test started-at="2020-10-07T12:54:28 EET" name="Regression" finished-at="2020-10-07T12:54:44 EET" duration-ms="16136">
      <class name="Tests.UserRegistrationTestWithJavaFaker">
        <test-method is-config="true" signature="startDriver(java.lang.String)[pri:0, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231]" started-at="2020-10-07T12:54:19 EET" name="startDriver" finished-at="2020-10-07T12:54:28 EET" duration-ms="8823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method signature="UserCanRegisterSuccssfully()[pri:1, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231]" started-at="2020-10-07T12:54:32 EET" name="UserCanRegisterSuccssfully" finished-at="2020-10-07T12:54:36 EET" duration-ms="3619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanRegisterSuccssfully -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231]" started-at="2020-10-07T12:54:36 EET" name="screenshotOnFailure" finished-at="2020-10-07T12:54:36 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanRegisterSuccssfully status=SUCCESS method=UserRegistrationTestWithJavaFaker.UserCanRegisterSuccssfully()[pri:1, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="RegisteredUserCanLogout()[pri:2, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231]" started-at="2020-10-07T12:54:36 EET" name="RegisteredUserCanLogout" finished-at="2020-10-07T12:54:37 EET" duration-ms="1162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisteredUserCanLogout -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231]" started-at="2020-10-07T12:54:37 EET" name="screenshotOnFailure" finished-at="2020-10-07T12:54:37 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisteredUserCanLogout status=SUCCESS method=UserRegistrationTestWithJavaFaker.RegisteredUserCanLogout()[pri:2, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="RegisteredUserCanLogin()[pri:3, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231]" started-at="2020-10-07T12:54:37 EET" name="RegisteredUserCanLogin" finished-at="2020-10-07T12:54:44 EET" duration-ms="6804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisteredUserCanLogin -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231]" started-at="2020-10-07T12:54:44 EET" name="screenshotOnFailure" finished-at="2020-10-07T12:54:44 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisteredUserCanLogin status=SUCCESS method=UserRegistrationTestWithJavaFaker.RegisteredUserCanLogin()[pri:3, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method is-config="true" signature="stopDriver()[pri:0, instance:Tests.UserRegistrationTestWithJavaFaker@b0a1231]" started-at="2020-10-07T12:54:44 EET" name="stopDriver" finished-at="2020-10-07T12:54:45 EET" duration-ms="698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- Tests.UserRegistrationTestWithJavaFaker -->
      <class name="Tests.ProductHoverMenuTest">
        <test-method signature="UserCanSelectSubCategoryFromMainMenu()[pri:0, instance:Tests.ProductHoverMenuTest@4694f434]" started-at="2020-10-07T12:54:31 EET" name="UserCanSelectSubCategoryFromMainMenu" finished-at="2020-10-07T12:54:32 EET" duration-ms="1260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanSelectSubCategoryFromMainMenu -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.ProductHoverMenuTest@4694f434]" started-at="2020-10-07T12:54:32 EET" name="screenshotOnFailure" finished-at="2020-10-07T12:54:32 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanSelectSubCategoryFromMainMenu status=SUCCESS method=ProductHoverMenuTest.UserCanSelectSubCategoryFromMainMenu()[pri:0, instance:Tests.ProductHoverMenuTest@4694f434] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.ProductHoverMenuTest -->
      <class name="Tests.SearchProductTest">
        <test-method signature="UserCanSearchForProducts()[pri:0, instance:Tests.SearchProductTest@4833eff3]" started-at="2020-10-07T12:54:28 EET" name="UserCanSearchForProducts" finished-at="2020-10-07T12:54:31 EET" duration-ms="3237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanSearchForProducts -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.SearchProductTest@4833eff3]" started-at="2020-10-07T12:54:31 EET" name="screenshotOnFailure" finished-at="2020-10-07T12:54:31 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanSearchForProducts status=SUCCESS method=SearchProductTest.UserCanSearchForProducts()[pri:0, instance:Tests.SearchProductTest@4833eff3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.SearchProductTest -->
    </test> <!-- Regression -->
  </suite> <!-- regerrisontest -->
</testng-results>
